# -*- coding: utf-8 -*-
"""movies.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1duFAry63X6WFe7_mWFcMULfNvjixhgPU
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

movie=pd.read_csv('https://raw.githubusercontent.com/rajeevratan84/datascienceforbusiness/refs/heads/master/MoviesOnStreamingPlatforms_updated.csv')

movie

movie.info()

movie.isnull().sum()

movie.columns

movie=movie.drop(columns=['Unnamed: 0'])

a=movie['Age'].mode()
a

movie['age']=movie['Age'].fillna(a)[0]
movie['age']

movie['IMDb'].mean()

IMDb_mean=movie['IMDb'].mean()
 IMDb_mean

movie['IMDb']=movie['IMDb'].fillna(IMDb_mean)[0]
movie['IMDb']

rotten_tomatoes_mean=movie['Rotten Tomatoes'].mode()
rotten_tomatoes_mean

movie['Rotten Tomatoes']=movie['Rotten Tomatoes'].fillna(rotten_tomatoes_mean)[0]
movie['Rotten Tomatoes']

movie.info()

movie['Directors'].isnull()
c=0
for i in movie['Directors']:
    if pd.isnull(i):
        c+=1
print(c)

movie['Directors'].replace(np.nan,'Unknown',inplace=True)
movie['Directors']

movie.info()

movie['Genres'].replace(np.nan,'Unknown',inplace=True)
movie['Genres']

movie['Country'].replace(np.nan,'Unknown',inplace=True)
movie['Country']

movie['Language'].replace(np.nan,'Unknown',inplace=True)
movie['Language']

Runtime_mean=movie['Runtime'].mean()
Runtime_mean

movie['Runtime'].fillna(Runtime_mean,inplace=True)
movie['Runtime']

movie.info()

# 1.how many unique movies are in data set
movie['Title'].nunique()

# 2. which platform has the highest IMDb ratings?
platform_ratings=movie.groupby(['Netflix','Disney+','Prime Video','Hulu'])['IMDb'].mean()
highest_rated_platform=platform_ratings.idxmax()
highest_rated_platform

# 3. which movie have highest IMDb Ratings?
highest_rated_movie_index = movie['IMDb'].idxmax()
highest_rated_movie_title = movie.loc[highest_rated_movie_index,['Title','Directors']]
highest_rated_movie_title

# 4.Are there any movies available on all four platforms(Netflix,Hulu,Prime Video,Disney+)?
movie.groupby(['Netflix','Disney+','Prime Video','Hulu'])==1

# 5. which platform has the most movies with an IMDb rating above 8.0
# Filter movies with IMDb rating above 8.0
high_rated_movies = movie[movie['IMDb'] > 8.0]

# Group by platform and count the number of movies
platform_counts = high_rated_movies[['Netflix', 'Hulu', 'Prime Video', 'Disney+']].sum()

# Find the platform with the most movies
platform_with_most_movies = platform_counts.idxmax()

print(f"The platform with the most movies with an IMDb rating above 8.0 is: {platform_with_most_movies}")

# 6.which platform has the most movies released after 2015?
movies_after_2015 = movie[movie['Year'] > 2015]
platform_counts = movies_after_2015[['Netflix', 'Hulu', 'Prime Video', 'Disney+']].sum()
platform_with_most_movies = platform_counts.idxmax()
# print(f"The platform with the most movies released after 2015 is: {platform_with_most_movies}")
print(platform_with_most_movies)

#7.What are the top 5 genres with the most movies?
movie.groupby('Genres')['Title'].count().sort_values(ascending=False).head(5)

#8. Which genre has the highest average IMDb rating?
movie.groupby('Genres')['IMDb'].mean().idxmax()

#9. What is the most popular genre on Netflix?
movie[movie['Netflix']==1].groupby('Genres')['Title'].count().idxmax()

#10. How many movies in the Comedy genre have an IMDb rating above 7.5?
movie[(movie['Genres']=='Comedy') & (movie['IMDb']>7.5)]['Title'].shape[0]

#11.What is the average IMDb rating for Horror movies?
movie[movie['Genres']=='Horror']['IMDb'].mean()

#12.Who are the top 5 directors with the most movies in the dataset?
movie.groupby('Directors')['Title'].count().sort_values(ascending=False).head(5)

#13.Which director has the highest average IMDb rating?
movie.groupby('Directors')['IMDb'].mean().idxmax()

#14. Which director has made the most Action movies?
movie[movie['Genres']=='Action'].groupby('Directors')['Title'].count().idxmax()

#15.What is the average IMDb rating of movies directed by Christopher Nolan and movies name?
movie[movie['Directors']=='Christopher Nolan']['IMDb'].mean()

"""Visualisation parts

"""

# 1.how many movies were released each year?
movie.groupby('Year')['Title'].count()

movies_per_year = movie.groupby('Year')['Title'].count().reset_index()

plt.figure(figsize=(12, 6))  # Adjust figure size if needed
sns.lineplot(x='Year', y='Title', data=movies_per_year)
plt.xlabel("Year")
plt.ylabel("Number of Movies Released")
plt.title("Number of Movies Released Each Year")
plt.xticks(rotation=45, ha='right')  # Rotate x-axis labels for better readability
plt.show()

# 2. what is the most commen genres in the dataset?
movie['Genres'].mode()[0]

top_10_genres = movie['Genres'].value_counts().head(10)

plt.figure(figsize=(10, 10))  # Adjust figure size if needed
plt.pie(top_10_genres.values, labels=top_10_genres.index, autopct='%1.1f%%', startangle=90)
plt.title('Top 10 Most Common Genres')
plt.show()

# 3.what is the most common language for movies?
movie['Language'].mode()[0]

a=movie['Language'].value_counts().head(10)
a.plot(kind='barh',color='skyblue')
plt.title('top 10 most common language')
plt.show()

# 4.how many movies are available on each streaming platform?
platform_counts = movie[['Netflix', 'Hulu', 'Prime Video', 'Disney+']].sum()
print(platform_counts)

platform_counts = movie[['Netflix', 'Hulu', 'Prime Video', 'Disney+']].sum()

# Create the bar chart
plt.figure(figsize=(8, 6))  # Adjust figure size if needed
sns.barplot(x=platform_counts.index, y=platform_counts.values)
plt.xlabel("Streaming Platform")
plt.ylabel("Number of Movies")
plt.title("Number of Movies Available on Each Platform")
plt.xticks(rotation=45, ha='right')  # Rotate x-axis labels for better readability
plt.show()

# 5. what is the average imdb rating of all movies?
movie['IMDb'].mean()

sns.lineplot(x='Runtime',y='Year',data=movie)
plt.show()

# 6. top 10 high length movies with Title?
top_10=movie.nlargest(10,'Runtime')[['Title','Runtime']].set_index('Title')
sns.barplot(x='Runtime',y=top_10.index,data=top_10,color='yellow')
plt.xlabel('Runtime')
plt.ylabel('Title')
plt.title('Top 10 Movies by Runtime')
plt.show()

# 7. how many movies are released in each Year?
plt.figure(figsize=(25,6))
a=sns.histplot(x='Year',data=movie)
plt.xlabel('Year')
plt.ylabel('Number of Movies')
plt.title('Distribution of Movies by Year')
plt.show()

# 8. plot the top 10 movies with IMDb,Title, Directors name?
top_10=movie.nlargest(10,'IMDb')[['Title','IMDb','Directors']].set_index('Title')
sns.barplot(x='IMDb',y=top_10.index,data=top_10,hue='Directors')
plt.legend(bbox_to_anchor=(1.05, 1), loc=2)

# 9.Among the top 10 movies with the highest IMDb ratings, how many are available on Prime Video, and what are their titles and genres
top_10=movie.nlargest(10,'IMDb')[['Title','Genres','IMDb','Prime Video']].set_index('Title')
sns.barplot(x='IMDb',y=top_10.index,data=top_10,hue='Prime Video')

#10.number of movies available on each platfort
plt.figure(figsize=(8, 6))
sns.barplot(x=platform_counts.index, y=platform_counts.values)
plt.xlabel("Streaming Platform")
plt.ylabel("Number of Movies")
plt.title("Number of Movies Available on Each Platform")
plt.xticks(rotation=45, ha='right')
plt.show()

# 11. plot the top 10 common genre?
a=movie['Genres'].value_counts().head(10)
a.plot(kind='barh',color='skyblue')
plt.title('top 10 most common genre')
plt.show()

# 12. How many movies are released in this each platform 'Netflix', 'Prime Video', 'Disney+'?
stream = (['Netflix', 'Prime Video', 'Disney+'])
platform_counts = movie[stream].sum()
a=sns.barplot(x=platform_counts.index, y=platform_counts.values)
a.bar_label(a.containers[0])
plt.xlabel('Streaming Platform')
plt.ylabel('Number of Movies')
plt.title('Streaming Platforms ')
plt.show()

# 13.number of movies available in each of these languages('English','French', 'Arabic')
language = (['English','French', 'Arabic'])
language_count = movie[movie['Language'].isin(language)]
language_counts = language_count['Language'].value_counts()
sns.lineplot(x=language_counts.index, y=language_counts.values,marker='^')
plt.xlabel('Language')
# plt.title(' ')
plt.show()

# 14.plot the top 10 countries?
a=movie['Country'].value_counts().head(10)
a.plot(kind='barh',color='lightgreen')
plt.title('top 10 countries')
plt.show()

plt.figure(figsize=(10,10))
# a.plot(kind='pie',x=a.index)
y=a.values
x=a.index
explode=[0.1]*len(y)
plt.pie(y,labels=x,radius=1.2,autopct='%1.2f%%',explode=explode)
plt.show()